{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u5DE5\\u4F5C\\u5BA4\\\\\\u4E2D\\u671F\\u8003\\u6838\\\\Mid-term-assessment\\\\midassessment\\\\src\\\\pages\\\\register\\\\index.jsx\";\nimport { AutoComplete, Button, Cascader, Checkbox, Col, Form, Input, InputNumber, Row, Select } from 'antd';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function index() {\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"register\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      label: \"Username\",\n      rules: [{\n        type: 'username',\n        message: 'The input is not valid Username'\n      }, {\n        required: true,\n        message: 'Please input your Username'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, _ref => {\n        let {\n          getFieldValue\n        } = _ref;\n        return {\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('The two passwords that you entered do not match!'));\n          }\n\n        };\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '100%',\n          transform: 'translateX(-50%)'\n        },\n        htmlType: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"names":["AutoComplete","Button","Cascader","Checkbox","Col","Form","Input","InputNumber","Row","Select","React","useState","index","onFinish","values","console","log","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error","position","left","top","transform"],"sources":["D:/工作室/中期考核/Mid-term-assessment/midassessment/src/pages/register/index.jsx"],"sourcesContent":["import {\r\n    AutoComplete,\r\n    Button,\r\n    Cascader,\r\n    Checkbox,\r\n    Col,\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    Row,\r\n    Select,\r\n  } from 'antd';\r\n  import React, { useState } from 'react';\r\n\r\n  export default function index() {\r\n\r\n    const onFinish = (values) => {\r\n      console.log('Received values of form: ', values);\r\n    };\r\n    return (\r\n      <Form\r\n      name=\"register\"\r\n      onFinish={onFinish}>  \r\n    <Form.Item\r\n      name=\"username\"\r\n      label=\"Username\"\r\n      rules={[\r\n        {\r\n          type: 'username',\r\n          message: 'The input is not valid Username',\r\n        },\r\n        {\r\n          required: true,\r\n          message: 'Please input your Username',\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n    <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n    </Form.Item>\r\n    <Form.Item >\r\n        <Button type=\"primary\" style={{position:'absolute', left: '50%',top: '100%',transform: 'translateX(-50%)'}} htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n    </Form.Item>\r\n    </Form>\r\n    )\r\n  }\r\n  "],"mappings":";AAAA,SACIA,YADJ,EAEIC,MAFJ,EAGIC,QAHJ,EAIIC,QAJJ,EAKIC,GALJ,EAMIC,IANJ,EAOIC,KAPJ,EAQIC,WARJ,EASIC,GATJ,EAUIC,MAVJ,QAWS,MAXT;AAYE,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAE9B,MAAMC,QAAQ,GAAIC,MAAD,IAAY;IAC3BC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;EACD,CAFD;;EAGA,oBACE,QAAC,IAAD;IACA,IAAI,EAAC,UADL;IAEA,QAAQ,EAAED,QAFV;IAAA,wBAGF,QAAC,IAAD,CAAM,IAAN;MACE,IAAI,EAAC,UADP;MAEE,KAAK,EAAC,UAFR;MAGE,KAAK,EAAE,CACL;QACEI,IAAI,EAAE,UADR;QAEEC,OAAO,EAAE;MAFX,CADK,EAKL;QACEC,QAAQ,EAAE,IADZ;QAEED,OAAO,EAAE;MAFX,CALK,CAHT;MAAA,uBAcE,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA;IAdF;MAAA;MAAA;MAAA;IAAA,QAHE,eAmBF,QAAC,IAAD,CAAM,IAAN;MACI,IAAI,EAAC,UADT;MAEI,KAAK,EAAC,UAFV;MAGI,KAAK,EAAE,CACL;QACEC,QAAQ,EAAE,IADZ;QAEED,OAAO,EAAE;MAFX,CADK,CAHX;MASI,WAAW,MATf;MAAA,uBAWI,QAAC,KAAD,CAAO,QAAP;QAAA;QAAA;QAAA;MAAA;IAXJ;MAAA;MAAA;MAAA;IAAA,QAnBE,eAiCF,QAAC,IAAD,CAAM,IAAN;MACI,IAAI,EAAC,SADT;MAEI,KAAK,EAAC,kBAFV;MAGI,YAAY,EAAE,CAAC,UAAD,CAHlB;MAII,WAAW,MAJf;MAKI,KAAK,EAAE,CACL;QACEC,QAAQ,EAAE,IADZ;QAEED,OAAO,EAAE;MAFX,CADK,EAKL;QAAA,IAAC;UAAEE;QAAF,CAAD;QAAA,OAAwB;UACtBC,SAAS,CAACC,CAAD,EAAIC,KAAJ,EAAW;YAClB,IAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;cACjD,OAAOC,OAAO,CAACC,OAAR,EAAP;YACD;;YAED,OAAOD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAU,kDAAV,CAAf,CAAP;UACD;;QAPqB,CAAxB;MAAA,CALK,CALX;MAAA,uBAqBI,QAAC,KAAD,CAAO,QAAP;QAAA;QAAA;QAAA;MAAA;IArBJ;MAAA;MAAA;MAAA;IAAA,QAjCE,eAwDF,QAAC,IAAD,CAAM,IAAN;MAAA,uBACI,QAAC,MAAD;QAAQ,IAAI,EAAC,SAAb;QAAuB,KAAK,EAAE;UAACC,QAAQ,EAAC,UAAV;UAAsBC,IAAI,EAAE,KAA5B;UAAkCC,GAAG,EAAE,MAAvC;UAA8CC,SAAS,EAAE;QAAzD,CAA9B;QAA4G,QAAQ,EAAC,QAArH;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAxDE;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgED"},"metadata":{},"sourceType":"module"}